// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package demo_mq.actions;

import java.io.IOException;
import java.util.Hashtable;
import com.ibm.mq.*;
import com.ibm.mq.constants.MQConstants;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class JA_GetMessageFromMQ extends CustomJavaAction<IMendixObject>
{
	private final java.lang.String Host;
	private final java.lang.Long Port;
	private final java.lang.String Channel;
	private final java.lang.String QManager;
	private final java.lang.String Queue;
	private final java.lang.String UserID;
	private final java.lang.String Password;

	public JA_GetMessageFromMQ(
		IContext context,
		java.lang.String _host,
		java.lang.Long _port,
		java.lang.String _channel,
		java.lang.String _qManager,
		java.lang.String _queue,
		java.lang.String _userID,
		java.lang.String _password
	)
	{
		super(context);
		this.Host = _host;
		this.Port = _port;
		this.Channel = _channel;
		this.QManager = _qManager;
		this.Queue = _queue;
		this.UserID = _userID;
		this.Password = _password;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		// BEGIN USER CODE
		Hashtable<String, Object> props = new Hashtable<String, Object>();
		props.put(MQConstants.HOST_NAME_PROPERTY, this.Host);
		props.put(MQConstants.CHANNEL_PROPERTY, this.Channel);
		props.put(MQConstants.PORT_PROPERTY, Integer.parseInt(this.Port.toString()));
		props.put(MQConstants.USER_ID_PROPERTY, this.UserID);
		props.put(MQConstants.PASSWORD_PROPERTY, this.Password);
		props.put(MQConstants.TRANSPORT_PROPERTY, MQConstants.TRANSPORT_MQSERIES_CLIENT);

		boolean result = false;
		String message = "";
		MQQueueManager qMgr = null;
		MQQueue queue = null;

		//Create a new instance of ConnectAndGetMessageFromMQ_Result entity
		IMendixObject resultObj = Core.instantiate(getContext(), "DEMO_MQ.GetMessageResult");
		
		try {
		    qMgr = new MQQueueManager(this.QManager, props);
		    int openOptions = MQConstants.MQOO_INPUT_AS_Q_DEF | MQConstants.MQOO_OUTPUT;
		    queue = qMgr.accessQueue(this.Queue, openOptions);
		    
		    MQMessage mqMessage = new MQMessage();
		    queue.get(mqMessage);
		    
		    byte[] b = new byte[mqMessage.getMessageLength()];
		    mqMessage.readFully(b);
		    
		    result = true;
		    message = new String(b);
		} catch (MQException ex) {
		    message = "A MQ error occured : Completion code " + ex.completionCode + " Reason code " + ex.reasonCode;
		    resultObj.setValue(getContext(), "ReasonCode",  String.valueOf(ex.reasonCode));
		} catch (IOException ex) {
		    message = "An IO error occured : " + ex;
		} finally {
		    if (queue != null) {
		        try {
		            queue.close();
		        } catch (MQException e) {
		            e.printStackTrace();
		        }
		    }
		    if (qMgr != null) {
		        try {
		            qMgr.disconnect();
		        } catch (MQException e) {
		            e.printStackTrace();
		        }
		    }
		}

	

		//Set IsSuccessful and Message attributes of the result object
		resultObj.setValue(getContext(), "IsSuccessful", result);
		resultObj.setValue(getContext(), "Message", message);

		return resultObj;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_GetMessageFromMQ";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
