// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package kafka.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import kafka.impl.FilteredKafkaProcessor;
import kafka.impl.KafkaProcessor;
import kafka.impl.KafkaProcessorRepository;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * This action will listen to a topic, and start a microflow for each JSON message in that topic that passes a filter.
 * 
 * The filter is specified as the value at a certain place inside the message.
 * 
 * This action will always return true.
 */
public class StartFilteredProcessor extends CustomJavaAction<java.lang.Boolean>
{
	private final java.lang.String name;
	/** @deprecated use configuration.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __configuration;
	private final kafka.proxies.StreamsConfig configuration;
	private final java.lang.String fromTopic;
	private final java.lang.String jsonPointer;
	private final java.lang.String filterValue;
	private final java.lang.String toTopic;
	private final java.lang.String onProcess;

	public StartFilteredProcessor(
		IContext context,
		java.lang.String _name,
		IMendixObject _configuration,
		java.lang.String _fromTopic,
		java.lang.String _jsonPointer,
		java.lang.String _filterValue,
		java.lang.String _toTopic,
		java.lang.String _onProcess
	)
	{
		super(context);
		this.name = _name;
		this.__configuration = _configuration;
		this.configuration = _configuration == null ? null : kafka.proxies.StreamsConfig.initialize(getContext(), _configuration);
		this.fromTopic = _fromTopic;
		this.jsonPointer = _jsonPointer;
		this.filterValue = _filterValue;
		this.toTopic = _toTopic;
		this.onProcess = _onProcess;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		KafkaProcessor processor = new FilteredKafkaProcessor(this.configuration.getMendixObject(), 
				getContext(), fromTopic, jsonPointer, filterValue, toTopic, onProcess); 
		processor.start();
		KafkaProcessorRepository.put(name, processor);
		
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StartFilteredProcessor";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
